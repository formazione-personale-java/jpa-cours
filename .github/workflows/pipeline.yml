name: Java CI/CD Pipeline with Matrix

on:
  push:
    branches:
      - main
      - develop
      - master
  pull_request:

jobs:
  # 1. Validation et Compilation
  validate-and-build:
    name: 🛠️ Validate and Build (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 21 ] # Matrice pour les versions de Java
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Validate Code Style
        run: java -version
      - name: Build Application
        run: mvn clean package

  # 2. Tests Unitaires
  unit-tests:
    name: 🧪 Unit Tests (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    needs: [ validate-and-build ]
    strategy:
      matrix:
        java: [ 21 ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Run Unit Tests
        run: mvn test

  # 3. Tests d'Intégration
  integration-tests:
    name: 🔗 Integration Tests (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    needs: [ validate-and-build ]
    strategy:
      matrix:
        java: [ 21]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Run Integration Tests
        run: mvn verify

  # 4. Tests End-to-End (E2E)
  e2e-tests:
    name: 🧑‍💻 End-to-End Tests (Single Java Version)
    runs-on: ubuntu-latest
    needs: [ unit-tests, integration-tests ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java (Default Version)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21' # E2E uniquement sur Java 17
      - name: Run E2E Tests
        run: mvn verify # Utiliser vos scripts personnalisés

  # 5. Packaging et Artefacts
  package-artifacts:
    name: 📦 Package Artifacts (Java 21)
    runs-on: ubuntu-latest
    needs: [ unit-tests, integration-tests ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Final Package
        run: mvn clean install

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-artifact
          path: target/*.jar

  # 6. Déploiement en Staging
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [ package-artifacts ]
    steps:
      - uses: actions/checkout@v3
      - name: Give execute permission to deploy.sh
        run: chmod +x ./deploy.sh
      - name: Deploy to Staging
        run: ./deploy.sh staging

  # 7. Déploiement en Production
  deploy-production:
    name: 🚚 Deploy to Production
    runs-on: ubuntu-latest
    needs: [ deploy-staging ]
    steps:
      - uses: actions/checkout@v3
      - name: Give execute permission to deploy.sh
        run: chmod +x ./deploy.sh
      - name: Deploy to Production
        run: ./deploy.sh production

    # Lister des Jobs
    #1. Validation du code
    #2. Analyse Static et Securitè
    #3. Compulation et Build
    #4. Test Unitaires
    #5. Test Integration
    #6. Test integration
    #7. Test end to end
    #8. Packegging et Artifact
    #9. Deploment environnement de Tests

    #10. Verification Stagging

   #10. Verification Stagging

    #11. Deployment environnement de Production
